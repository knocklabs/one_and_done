name: One and Done CI/CD


on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      CI_RUN: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions

      - uses: erlef/setup-elixir@e3f6ffe2878180f57318bf13febd3933ee81f664
        with:
          elixir-version: ${{ steps.versions.outputs.elixir }}
          otp-version: ${{ steps.versions.outputs.erlang }}

      - name: Retrieve mix cache
        uses: actions/cache@v3
        id: "mix-cache"
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-1-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-1-

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex 2.0.6 --force
          mix deps.get
          mix deps.compile

      - name: Check Formatting
        run: mix format --check-formatted
      
      - name: Run credo
        run: mix credo --strict

      # Compile for the test env before test to catch any compiler errors + warnings
      - name: Precompile
        run: MIX_ENV=test mix compile --warnings-as-errors

      # Run tests with compiler warnings causing a failure
      - name: Run tests
        run: mix test --warnings-as-errors
